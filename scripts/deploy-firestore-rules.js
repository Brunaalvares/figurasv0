#!/usr/bin/env node

/**
 * Script para deploy das regras do Firestore
 * 
 * Este script facilita o processo de aplica√ß√£o das regras de seguran√ßa
 * no Firebase Console programaticamente.
 */

const fs = require('fs');
const path = require('path');

// Cores para output no terminal
const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m',
  cyan: '\x1b[36m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

function validateRulesFile() {
  const rulesPath = path.join(__dirname, '..', 'firestore.rules');
  
  if (!fs.existsSync(rulesPath)) {
    log('‚ùå Arquivo firestore.rules n√£o encontrado!', 'red');
    log('üí° Certifique-se de que o arquivo existe na raiz do projeto', 'yellow');
    return false;
  }
  
  const rulesContent = fs.readFileSync(rulesPath, 'utf8');
  
  // Valida√ß√µes b√°sicas
  if (!rulesContent.includes('rules_version')) {
    log('‚ùå Arquivo de regras inv√°lido: missing rules_version', 'red');
    return false;
  }
  
  if (!rulesContent.includes('marketing2@avalyst.com.br')) {
    log('‚ùå Admin principal n√£o encontrado nas regras!', 'red');
    return false;
  }
  
  if (!rulesContent.includes('service cloud.firestore')) {
    log('‚ùå Arquivo de regras inv√°lido: missing service declaration', 'red');
    return false;
  }
  
  log('‚úÖ Arquivo de regras validado com sucesso!', 'green');
  return true;
}

function showRulesSummary() {
  log('\nüìã RESUMO DAS REGRAS DE SEGURAN√áA', 'cyan');
  log('================================', 'cyan');
  
  log('\nüëë Admin Principal (marketing2@avalyst.com.br):', 'magenta');
  log('   ‚úÖ Acesso total a todas as cole√ß√µes', 'green');
  log('   ‚úÖ Pode gerenciar usu√°rios, figurinhas e conquistas', 'green');
  
  log('\nüõ°Ô∏è Admins com Role no Banco:', 'blue');
  log('   ‚úÖ Podem criar figurinhas e conquistas', 'green');
  log('   ‚úÖ Podem gerenciar metas customizadas', 'green');
  log('   ‚ùå N√£o podem gerenciar outros usu√°rios', 'red');
  
  log('\nüë§ Usu√°rios Normais (Employees):', 'blue');
  log('   ‚úÖ Podem ler apenas seus pr√≥prios dados', 'green');
  log('   ‚úÖ Podem visualizar metas customizadas', 'green');
  log('   ‚ùå N√£o podem criar figurinhas ou conquistas', 'red');
  
  log('\nüóÇÔ∏è Cole√ß√µes Protegidas:', 'yellow');
  log('   üìÅ users - Dados dos usu√°rios', 'bright');
  log('   üé¥ stickers - Figurinhas dos usu√°rios', 'bright');
  log('   üèÜ achievements - Conquistas dos usu√°rios', 'bright');
  log('   üéØ customAchievements - Metas customizadas', 'bright');
}

function showDeployInstructions() {
  log('\nüöÄ COMO APLICAR AS REGRAS', 'cyan');
  log('========================', 'cyan');
  
  log('\nüìù M√©todo 1 - Firebase Console (Recomendado):', 'yellow');
  log('   1. Acesse: https://console.firebase.google.com/', 'bright');
  log('   2. Selecione o projeto: sistema-figuras', 'bright');
  log('   3. V√° para: Firestore Database > Rules', 'bright');
  log('   4. Copie o conte√∫do de firestore.rules', 'bright');
  log('   5. Cole no editor e clique em "Publish"', 'bright');
  
  log('\nüíª M√©todo 2 - Firebase CLI:', 'yellow');
  log('   1. npm install -g firebase-tools', 'bright');
  log('   2. firebase login', 'bright');
  log('   3. firebase init firestore (se necess√°rio)', 'bright');
  log('   4. firebase deploy --only firestore:rules', 'bright');
  
  log('\nüß™ M√©todo 3 - Testar Localmente:', 'yellow');
  log('   1. firebase firestore:rules:test --project=sistema-figuras', 'bright');
}

function showTestCases() {
  log('\nüß™ CASOS DE TESTE SUGERIDOS', 'cyan');
  log('============================', 'cyan');
  
  log('\n‚úÖ Teste 1 - Admin acessando todos os dados:', 'green');
  log('   Auth: marketing2@avalyst.com.br', 'bright');
  log('   Path: /users/any_user_id', 'bright');
  log('   Operation: read', 'bright');
  log('   Esperado: Allow', 'green');
  
  log('\n‚úÖ Teste 2 - Usu√°rio acessando pr√≥prios dados:', 'green');
  log('   Auth: user@avalyst.com', 'bright');
  log('   Path: /users/{user_uid}', 'bright');
  log('   Operation: read', 'bright');
  log('   Esperado: Allow', 'green');
  
  log('\n‚ùå Teste 3 - Usu√°rio tentando acessar dados de outro:', 'red');
  log('   Auth: user@avalyst.com', 'bright');
  log('   Path: /users/other_user_uid', 'bright');
  log('   Operation: read', 'bright');
  log('   Esperado: Deny', 'red');
  
  log('\n‚ùå Teste 4 - Usu√°rio tentando criar figurinha:', 'red');
  log('   Auth: user@avalyst.com', 'bright');
  log('   Path: /stickers/new_sticker', 'bright');
  log('   Operation: create', 'bright');
  log('   Esperado: Deny', 'red');
}

function main() {
  log('üîí FIRESTORE SECURITY RULES DEPLOYMENT', 'cyan');
  log('======================================', 'cyan');
  
  // Validar arquivo de regras
  if (!validateRulesFile()) {
    process.exit(1);
  }
  
  // Mostrar resumo
  showRulesSummary();
  
  // Mostrar instru√ß√µes de deploy
  showDeployInstructions();
  
  // Mostrar casos de teste
  showTestCases();
  
  log('\n‚ö° PR√ìXIMOS PASSOS:', 'cyan');
  log('==================', 'cyan');
  log('1. Copie o conte√∫do de firestore.rules', 'bright');
  log('2. Acesse o Firebase Console', 'bright');
  log('3. Aplique as regras na aba Rules', 'bright');
  log('4. Teste no Rules Playground', 'bright');
  log('5. Monitore os logs de seguran√ßa', 'bright');
  
  log('\nüéâ Regras prontas para deploy!', 'green');
}

// Executar script
if (require.main === module) {
  main();
}

module.exports = {
  validateRulesFile,
  showRulesSummary,
  showDeployInstructions,
  showTestCases
};